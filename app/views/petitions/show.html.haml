- content_for :title, @petition.title
- progressmessaging = spin! "test different messaging on progress bar", :signature, ["x_signatures_of_y", "x_y_to_next_goal", "x_y_to_goal", "x_y_to_go_of_z", "x_supporters_y_to_next_goal", "x_supporters_y_to_goal", "x_supporters_help_us", "x_of_y_supporters"]
- if @was_signed
  - fb_action_like_popup = spin! "facebook sharing options", :referred_member, ["facebook_like", "facebook_popup", "facebook_widget"]
-#add "facebook_share" option to this experiment

= render :partial => "javascript_content", :locals => {fb_action_like_popup: fb_action_like_popup}

.fb-root

- if @just_signed
  #mobile_thanks
    .thanks
      Thanks for signing!
    .sharing-message
      Spread the word, share with your friends!
    .tweet
      %a.twitter-share-button{'data-url' => @tweetable_url} Tweet
    .btn.btn-primary.fb_popup_btn
      .fb_icon
      .text Share on facebook

#petition_page.page_content
  .sidebar_test.secondary
    - unless @was_signed
      .signature-form
        .title
          Sign this petition!
        .through_site
          = form_tag [@petition, @signature] do |form|
            = simple_fields_for :signature, @signature do |f|
              = f.input :first_name, :hint => false
              = f.input :last_name, :hint => false
              = f.input :email
              = render :partial => "hidden_params"
              #hint.alert.alert-error
              = f.button(:submit, :id => 'sign_petition', :class => 'btn btn-primary', :value => 'Sign!' )

          .through_fb
            .text Sign in via
            .button.btn.btn-primary Facebook!
          .privacypolicy
            We don't share your email address without your permission. We will send you updates on this and other important campaigns by email, but you can unsubscribe at any time.
    - else
      #thanks-for-signing-message
        = render :partial => "thanks_for_signing", :locals => {fb_action_like_popup: fb_action_like_popup}
      #sign-again
        %a{href: "javascript:$.cookie('member_id', null, {path: '/'});location.reload();", :id => "sign-again-link"}
          Does someone else want to sign? Click here.

  .petition_test.primary
    .petition
      .header
        - if @petition.has_edit_permissions(current_user)
          %h1.petition_title.admin= @petition.title
          = link_to_if current_user, 'Edit this Petition', edit_petition_path(@petition), class: "edit btn btn-primary"
        - else
          %h1.petition_title= @petition.title

        .social
          .mobile_signup_button
            = link_to('Sign this Petition!', '#sign_mobile', :class => 'mobile_sign btn btn-primary', :'data-toggle' => 'modal', :style => ( @was_signed ? 'display:none' : ''))

          - if progressmessaging == 'x_signatures_of_y' || progressmessaging == 'x_of_y_supporters'
            .social_icons
              = fb_like petition_url(params[:id]), @fb_tracking_hash
          - else
            .social_icons.tallerprogress
              -#<a href="http://pinterest.com/pin/create/button/" class="pin-it-button" count-layout="horizontal"><img border="0" src="//assets.pinterest.com/images/PinExt.png" title="Pin It" /></a>
              = fb_like petition_url(params[:id]), @fb_tracking_hash
          .progress_bar
            .numbers
              - if progressmessaging == 'x_signatures_of_y'
                .highlight_text
                  #{@sigcount} signatures
                of #{counter_size(@sigcount)}
              - elsif progressmessaging == 'x_y_to_next_goal'
                .highlight_text.break
                  #{@sigcount} signatures
                only #{counter_size(@sigcount)-@sigcount} more to reach our next goal!
              - elsif progressmessaging == 'x_y_to_goal'
                .highlight_text.break
                  #{@sigcount} signatures
                only #{counter_size(@sigcount)-@sigcount} more to reach our goal!
              - elsif progressmessaging == 'x_y_to_go_of_z'
                .highlight_text.break
                  #{@sigcount} signatures
                only #{counter_size(@sigcount)-@sigcount} more to reach our goal of #{counter_size(@sigcount)}!
              - elsif progressmessaging == 'x_supporters_y_to_next_goal'
                .highlight_text.break
                  #{@sigcount} supporters have signed
                only #{counter_size(@sigcount)-@sigcount} more to reach our next goal!

              - elsif progressmessaging == 'x_supporters_y_to_goal'
                .highlight_text.break
                  #{@sigcount} supporters have signed
                only #{counter_size(@sigcount)-@sigcount} more to reach our goal!
              - elsif progressmessaging == 'x_supporters_help_us'
                .highlight_text.break
                  #{@sigcount} supporters have signed
                sign now to help us reach our goal of #{counter_size(@sigcount)}!
              - elsif progressmessaging == 'x_of_y_supporters'
                #{@sigcount} of #{counter_size(@sigcount)} supporters have signed
            .progress
              .bar{ style: "width: #{float_to_percentage(@sigcount.to_f/counter_size(@sigcount))}" }
          %hr
      .content
        - petitiontext = @petition.description
        - if @petition.to_send != true
          - petitiontext = Sanitize.clean(petitiontext, Sanitize::Config::BASIC)
        .description= petitiontext.html_safe


  - content_for(:meta_tags) do
    - petition_to_open_graph(@petition, find_member_by_id_hash(@referring_member_hash)).each do |key, value|
      = content_tag "meta", nil, property:key, content:value.to_s.try(:html_safe)

  = hidden_field_tag 'petitionId', @petition.id

  - if @just_signed
    .modal#thanksModal
      .modal-body
        = link_to('x' , '#', :class => "close", :"data-dismiss" => 'modal')
        = render :partial => "thanks_for_signing", :locals => {fb_action_like_popup: fb_action_like_popup}

  .modal.hide#sign_mobile.signature-form
    .modal-body
      = link_to('x' , '', :class => 'close', :'data-dismiss' => 'modal')
      .title
        Sign this petition!
      .through_site
        = form_tag [@petition, @signature] do |form|
          = simple_fields_for :signature, @signature do |f|
            = f.input :first_name, :hint => false
            = f.input :last_name, :hint => false
            = f.input :email
            #hint.alert.alert-error
            = render :partial => "hidden_params"
            = f.button(:submit, :id => 'sign_petition', :class => 'btn btn-primary', :value => 'Sign!' )
